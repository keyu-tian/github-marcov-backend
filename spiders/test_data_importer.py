from datetime import datetime
import random
from user.models import User
from forum.models import Question, Tag, Content
import akshare as ak


covid_19_163_df = ak.covid_19_163(indicator="权威发布")
expert_name = list(set([x.strip() for x in covid_19_163_df['title'].values]))
expert_sentence = {}
for name in expert_name:
    expert_sentence[name] = []
for row in covid_19_163_df.iterrows():
    expert_sentence[row[1]['title'].strip()].append(row[1]['detail'])

TEXT = ['北京应该是在5月底、6月初出现最早的感染情况。目前公布的病例诊断时间最早是在6月11日，发病时间报告为6月5日。', '很长一段时间，中国会持续处于“接近零（本土）病例”而非“无病例”状态，对此我们要有清醒的认识，不要因此采取过度防疫，终止经济和民生的复苏。', '现在虽然发现了一些“无症状感染者”，但事实上对于这些“无症状感染者”的密切接触者进行监测和隔离，医生都发现他的传播力非常有限，没有发现明显的传播。', '当前，很多国家的疫情还在快速蔓延。在这种情况下复工复产，疫情控制不太好的国家其整体的发病人数很难控制下来，特别到了秋冬季疫情就可能反弹。不过大家不用过于担心，我国应对疫情的体系非常完整，已为防范疫情输入做好了准备。', '上海医院治疗确诊病例主要处方之一就是每天吃3-4个鸡蛋，这是写入我们治疗的处方内的 。如果没有那么充足的鸡蛋，可以用肉、鱼来替代。此外，保证充足摄入营养、饮水等。', '最近分析了上海数百个新冠肺炎确诊病例，分类后发现，所有重症、死亡病例都和年龄有关：50岁以上的人群确诊以后转为重症呈高风险，而年轻人普遍都是低风险。', '全世界的疫情可能要连续一到两年，也就是说在未来三个月以后或三个月当中都有可能整个世界会重启，整个世界重启的一个标志就是我们会有越来越多的输入性偶发病例。', '我们的疫情控制得非常好，使得我们失去了在中国从事三期临床研究的机会，将来中国几个跑在比较前面的疫苗如果要做临床研究，还要到国外疫情比较高发的地方去做。', '两名患者来沪时均没有症状，而后相继被确诊。在疫情新常态下，此后各地逐渐会有偶然散发确诊病例是大概率事件，大家应该做好这样的心理准备。', '天热的时候，可以开空调戴口罩。窗子还要照常开，定期开窗再关闭。在控制好的地区，可以尽快恢复工作和旅游。', '即使疫情控制了，我想还是要戴口罩的，还真是养成这种习惯。我估计这个口罩，在一年之内，起码到明年这时候是摘不掉的，一定要做好这种准备。', '目前阶段，中国的抗疫形势并不比国外一些地方更乐观。大部分中国人仍然是新冠病毒的易感人群，因为没有获得足够的免疫。', '全球开始接种要到年底，如果明年出来那是后年年底，所以在两年时间内我们的世界怎么运转下去，怎么活下去，这个是关键。', '不仅仅是医生、护士，乃至居委会干部、民众、警察、海关、道口，是无数的抗疫民众组成的免疫屏障，阻挡了疾病的蔓延。每个人都是战士，都是英雄，这才是真正的群体免疫。', '早期诊断非常重要，在一些国家，新冠病毒感染确诊需要得到疾控中心的确认，但在中国，政府很早就决定大医院都可以进行冠状病毒感染的诊断，这使得诊断速度更快。', '连花清瘟胶囊对新冠肺炎轻症和普通型患者的治疗有一定疗效。临床试验结果显示，使用连花清瘟胶囊的患者胸部CT改善率及临床治愈率高于对照组。', '按照目前三期临床研究的时间表和中国二期临床研究的时间表，世界上最早的疫苗结果公布时间，应该在今年年底或者明年年初1月左右。如果所有数据理想，能够申报美国FDA或中国CFDA的通过，应该在明年3月到6月之间。', '我也非常遗憾的告诉大家，基本大家抱有很大希望的抗病毒药物，目前的疗效都不是很好。', '连花清瘟第一能够使症状改善，比如全身不适，改善比对照组早两天。CT片子上看恢复也显著比对照组快。使用连花清瘟后发热时间缩短。', '戴口罩仍是很重要的自我防护手段，现在就提出不戴为时过早。不过，在疫情不严重的地区，人少的地方或空旷场所，倒不见得必须戴。', '新冠肺炎疫情大部分是通过呼吸道传播，但唾液里有大量的病毒，这次疫情很多人就是一家人得病。所以从流行病学的角度来说，分餐制是很重要的事情。', '黑龙江现在最重要的任务就是把感染源和密切接触者全部找出来并全部隔离。感染源被控制了，感染源以外的地方才是比较安全的。', '国际的抗疫没有结束，仍有可能会进来大量的输入性病例，无论中国还是国际都仍然面临巨大挑战。', '大家应该最大程度做到一起吃饭时稍微坐远一点，实行分餐制。分餐制不是愿不愿意的问题，而是就是要做。不分餐，在疾病面前，就是裸奔。', '“五一“假期能出游吗？可以去旅游，但是不要去人山人海的景区，挤在一起“抢”东西吃，这个时候如果不戴口罩，又是这么近距离，风险还是极高的。', '全球疫情拐点大概什么时候出现？这要看国外疫情发展的形势。今年五月底或许是一个重要时间节点，气温上升对病毒传播有一定的抑制作用。', '现在疫苗的临床试验的结果没有出来，三期临床试验全世界都还没开展，所以拿不到疫苗保护效果的数据。是不是人人都打，取决于几个数据。', '以中医药为主导的江夏方舱团队实现了零重症，这是非常令人欣喜的结果，这对于后期可能存在的第二轮疫情，有着指导性意义。', '新冠肺炎疫情在未来一到两年内不会止住，但预计一到两年后疫苗会出来，经过普种疫苗以后逐步可以把其控制住。', '这次抗击新冠肺炎疫情，中医药介入较深，全国一共有8万多确诊患者，中医介入治疗的占了7万多，占了总数的91%。', '轻症转重症最主要的一点要保证营养和蛋白质，这时候，光靠粥和咸菜就麻烦了。爱喝鱼汤但也要把鱼渣吃掉，因为都是蛋白质。', '上海本地逾92%患者接受中医药治疗，患者治愈率高达97.5%。这是中西医并重、融合救治的结果。中西医就像不同的武功，有些武功快一点，有些武功慢一点，但会持久些。', '从数据来看，大概50%的无症状感染者无发热的症状。因此，发热并不是无症状感染者的核心症状，而乏力、咳嗽更容易成为无症状感染者出现的首要症状。', '莲花清瘟对于新冠病毒有抑制作用，但从重症转轻症没有明显差异。因此，莲花清瘟胶囊可能对于轻症和非重症的新冠患者更加适用。', '从人类文明开始算，没有一次传染病的控制是通过群体免疫实现的。', '避免转成重症，关键是充分的营养，充分的能量产生抗体。感染生病后最重的是第7-10天，如果这段过程中靠充分的蛋白质，就能产生抗体。', '从病毒传播的主要途径来看，现在有一些说法在制造“歧视”，说只有某种人易感染，这是不对的，实际上所有人都易感染。', '团队做过一部分病人的肺功能的检查，总的来说肺功能有些下降。但是我相信随着时间推移，它会慢慢恢复的。', '目前，新冠肺炎病毒还没有明显突变，研发疫苗还是有效的。', '我认为下一波的疫情可能就会在11月份左右到来，我相信下一波疫情原则上来讲比第一波要低很多。但像非洲、南美等医疗资源不充分的国家，可能真的很难度过下一个冬季。']
# TEXT = """用爱心来做事，用感恩的心做人。
# 人永远在追求快乐，永远在逃避痛苦。
# 有多大的思想，才有多大的能量。
# 人的能量=思想+行动速度的平方。
# 励志是给人快乐，激励是给人痛苦。
# 成功者绝不给自己软弱的借口。
# 你只有一定要，才一定会得到。
# 决心是成功的开始。
# 当你没有借口的那一刻，就是你成功的开始。
# 命运是可以改变的。
# 成功者绝不放弃。
# 成功永远属于马上行动的人。
# 下定决心一定要，才是成功的关键。
# 成功等于目标，其他都是这句话的注解。
# 成功是一个过程，并不是一个结果。
# 成功者学习别人的经验，一般人学习自己的经验。
# 只有第一名可以教你如何成为第一名。
# 学习需要有计划。
# 完全照成功者的方法来执行。
# 九十九次的理论不如一次的行动来得实际。
# 一个胜利者不会放弃，而一个放弃者永远不会胜利。
# 信心、毅力、勇气三者具备，则天下没有做不成的事。
# 如果你想得到，你就会得到，你所需要付出的只是行动。
# 一个缺口的杯子，如果换一个角度看它，它仍然是圆的。
# 对于每一个不利条件，都会存在与之相对应的有利条件。
# 一个人的快乐，不是因为他拥有的多，而是他计较的少。
# 世间成事，不求其绝对圆满，留一份不足，可得无限美好。
# 记住：你是你生命的船长；走自己的路，何必在乎其它。
# 你要做多大的事情，就该承受多大的压力。
# 如果你相信自己，你可以做任何事。
# 天空黑暗到一定程度，星辰就会熠熠生辉。
# 时间顺流而下，生活逆水行舟。
# 生活充满了选择，而生活的态度就是一切。
# 人各有志，自己的路自己走。
# 别人的话只能作为一种参考，是不能左右自己的。
# 成功来自使我们成功的信念。
# 相互了解是朋友，相互理解是知己。
# 没有所谓失败，除非你不再尝试。
# 有时可能别人不在乎你，但你不能不在乎自己。
# 你必须成功，因为你不能失败。
# 羡慕别人得到的，不如珍惜自己拥有的。
# 喜欢一个人，就该让他（她）快乐。
# 别把生活当作游戏，谁游戏人生，生活就惩罚谁，这不是劝诫，而是--规则！
# 你要求的次数愈多，你就越容易得到你要的东西，而且连带地也会得到更多乐趣。
# 把气愤的心境转化为柔和，把柔和的心境转化为爱，如此，这个世间将更加完美。
# 一份耕耘，一份收获，付出就有回报永不遭遇过失败，因我所碰到的都是暂时的挫折。
# 心如镜，虽外景不断变化，镜面却不会转动，这就是一颗平常心，能够景转而心不转。
# 每件事情都必须有一个期限，否则，大多数人都会有多少时间就花掉多少时间。
# 人，其实不需要太多的东西，只要健康地活着，真诚地爱着，也不失为一种富有。
# 生命之长短殊不重要，只要你活得快乐，在有生之年做些有意义的事，便已足够。
# 活在忙与闲的两种境界里，才能俯仰自得，享受生活的乐趣，成就人生的意义。
# 一个从来没有失败过的人，必然是一个从未尝试过什么的人。
# 待人退一步，爱人宽一寸，人生自然活得很快乐。
# 经验不是发生在一个人身上的事件，而是一个人如何看待发生在他身上的事。
# 加倍努力，证明你想要的不是空中楼阁。胜利是在多次失败之后才姗姗而来。
# 只要能执着远大的理想，且有不达目的绝不终止的意愿，便能产生惊人的力量。
# 一个人，只要知道付出爱与关心，她内心自然会被爱与关心充满。
# 如果我们可以改变情绪，我们就可以改变未来。
# 明白事理的人使自己适应世界，不明事理的人硬想使世界适应自己。
# 当困苦姗姗而来之时，超越它们会更有余味。
# """


def rand_content() -> str:
    return TEXT[random.randint(0, len(TEXT)-1)]
    # return random.choice(TEXT.splitlines())


def test_data_import():
    # User.objects.all().delete()
    # Question.objects.all().delete()
    # Tag.objects.all().delete()
    # Content.objects.all().delete()
    users = []
    user_num = User.objects.all().count()
    # for i in range(1+user_num, 19+user_num):
    #     u = User.objects.create(name=f'test{i}', account=f'account{i}', pwd=f'password{i}', identity=1, login_date='')
    #     users.append(u)
    # for i in range(19+user_num, 21+user_num):
    #     u = User.objects.create(name=f'test{i}', account=f'account{i}', pwd=f'password{i}', identity=2, login_date='')
    #     users.append(u)
    for i in range(len(expert_name)):
        u = User.objects.create(name=f'{expert_name[i]}', account=f'{expert_name[i]}123', pwd=f'{expert_name[i]}123', identity=2, login_date='')
        users.append(u)
    questions = []
    question_num = Question.objects.all().count()
    for i in range(1+question_num, 11+question_num):
        q = Question.objects.create(title=f'question{i}', user=users[random.randint(0, 19)], published_time=datetime.now(), solved=random.randint(1, 10) > 8)
        Content.objects.create(user=q.user, published_time=datetime.now(), content=rand_content(), floor=1, questions=q, is_top=random.randint(1, 100) > 90)
        questions.append(q)
        if random.randint(0, 1) == 1:
            Tag.objects.create(question=q, name='tips')
        if random.randint(0, 1) == 1:
            Tag.objects.create(question=q, name='fake')
    for i in range(1, 100):
        c = Content.objects.create(user=users[random.randint(0, 19)], content=rand_content(), floor=0, published_time=datetime.now(), question=questions[random.randint(0, 9)], is_top=random.randint(1, 100) > 90)
        c.question.replied_time = datetime.now()
        if c.user.identity == 2:
            c.question.expert_reply = True
        c.question.save()
        all_contents = c.question.question_all_content.all()
        c.floor = all_contents.count()
        if random.randint(0, 1):
            c.replied_content_id = all_contents[random.randint(0, all_contents.count()-2)]
        c.save()
